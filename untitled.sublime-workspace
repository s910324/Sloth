{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"o",
				"open"
			],
			[
				"Tra",
				"trainImg	(statement)"
			],
			[
				"tar",
				"targetImg	(statement)"
			],
			[
				"d",
				"Draw	(function)"
			],
			[
				"im",
				"img2	(statement)"
			],
			[
				"Im",
				"ImageDraw	(module)"
			],
			[
				"ne",
				"newMatch	(statement)"
			],
			[
				"w",
				"with"
			],
			[
				"wid",
				"width2	(statement)"
			],
			[
				"ma",
				"matches	(statement)"
			],
			[
				"N",
				"new	(function)"
			],
			[
				"set",
				"setFixedSize	(function)"
			],
			[
				"number",
				"number1"
			],
			[
				"s",
				"setValue"
			],
			[
				"return",
				"returnClass"
			],
			[
				"val",
				"val2"
			],
			[
				"st",
				"string"
			],
			[
				"c",
				"cout"
			],
			[
				"plot",
				"plotPack	(statement)"
			],
			[
				"tool",
				"toolbar_location	(statement)"
			],
			[
				"v",
				"vform	(function)"
			],
			[
				"drawText",
				"drawTextItem	(function)"
			],
			[
				"AlignLe",
				"AlignLeft	(class)"
			],
			[
				"Qpa",
				"QPainter	(class)"
			],
			[
				"ren",
				"RenderHint	(class)"
			],
			[
				"de",
				"drawRect	(function)"
			],
			[
				"h",
				"html"
			],
			[
				"he",
				"height	Style CSS"
			],
			[
				"op",
				"opacity"
			],
			[
				"back",
				"background-color"
			],
			[
				"bo",
				"border-color"
			],
			[
				"da",
				"dashed"
			],
			[
				"borde",
				"border-style"
			],
			[
				"le",
				"left"
			],
			[
				"al",
				"text-align"
			],
			[
				"m",
				"MatplotlibExporter	(class)"
			],
			[
				"cons",
				"console.log('$0');"
			],
			[
				"setCn",
				"setCentralWidget	(function)"
			],
			[
				"setu",
				"setUpToolBar	(function)"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"Mi",
				"MinimumExpanding	(class)"
			],
			[
				"add",
				"addStrut	(function)"
			],
			[
				"bl",
				"blockSignals"
			],
			[
				"ch",
				"changeColor	(function)"
			],
			[
				"col",
				"colorChanged"
			],
			[
				"l",
				"ListType	(statement)"
			],
			[
				"Ty",
				"type	(class)"
			],
			[
				"color",
				"ColorView	(statement)"
			],
			[
				"Q",
				"QLineNumber	(module)"
			],
			[
				"Mcol",
				"MColorView	(class)"
			],
			[
				"show",
				"showColorDialog"
			],
			[
				"Qp",
				"QPen	(class)"
			],
			[
				"QPO",
				"QPointF	(class)"
			],
			[
				"draw",
				"drawEllipse	(function)"
			],
			[
				"dra",
				"drawLine	(function)"
			],
			[
				"QCom",
				"QComboBox	(class)"
			],
			[
				"QStylec",
				"QStyleOptionComboBox	(class)"
			],
			[
				"line_v",
				"line_val"
			],
			[
				"setch",
				"setChecked	(function)"
			],
			[
				"view",
				"viewBoxNum"
			],
			[
				"num",
				"viewNum"
			],
			[
				"line_vi",
				"line_viewNum"
			],
			[
				"viewBox",
				"viewBoxDict	(statement)"
			],
			[
				"sets",
				"setSizeHint"
			],
			[
				"setfix",
				"setFixedHeight	(function)"
			],
			[
				"siz",
				"sizeHint	(function)"
			],
			[
				"setF",
				"setFixedHeight	(function)"
			],
			[
				"up",
				"updateGeometry	(function)"
			],
			[
				"vl",
				"vListWidget	(statement)"
			],
			[
				"setSi",
				"setSizePolicy	(function)"
			],
			[
				"update",
				"updateGeometry	(function)"
			],
			[
				"vli",
				"vListWidgetItem	(statement)"
			],
			[
				"viewbox",
				"viewBoxList	(statement)"
			],
			[
				"itemD",
				"itemDcFocused	(statement)"
			],
			[
				"QLi",
				"QLinearGradient	(class)"
			],
			[
				"line",
				"lineVisible	(statement)"
			],
			[
				"M",
				"MLineListWidget	(class)"
			],
			[
				"QRe",
				"QRect	(class)"
			],
			[
				"list",
				"viewBoxListWidget"
			],
			[
				"vi",
				"viewBoxListWidget"
			],
			[
				"vL",
				"vListWidgetItem	(statement)"
			],
			[
				"setsty",
				"setStyleSheet	(function)"
			],
			[
				"fo",
				"focus	(param)"
			],
			[
				"spa",
				"space2	(statement)"
			],
			[
				"setFix",
				"setFixedHeight	(function)"
			],
			[
				"setc",
				"setContentsMargins	(function)"
			],
			[
				"setm",
				"setContentsMargins	(function)"
			],
			[
				"hea",
				"header_Color"
			],
			[
				"setR",
				"setRenderHint	(function)"
			],
			[
				"De",
				"Dense4Pattern	(class)"
			],
			[
				"setB",
				"setBrush	(function)"
			],
			[
				"adds",
				"addSpacing	(function)"
			],
			[
				"res",
				"resize	(function)"
			],
			[
				"cal",
				"canclePB	(statement)"
			],
			[
				"addS",
				"addStretch	(function)"
			],
			[
				"QChe",
				"QCheckBox	(class)"
			],
			[
				"Al",
				"AlignHCenter	(class)"
			],
			[
				"setup",
				"setupLineUI	(function)"
			],
			[
				"pos",
				"pos1Label0	(statement)"
			],
			[
				"QLine",
				"QLineNumber	(class)"
			],
			[
				"QCh",
				"QCheckBox	(class)"
			],
			[
				"se",
				"setupList	(function)"
			],
			[
				"la",
				"layout	(statement)"
			],
			[
				"name",
				"nameLineE"
			],
			[
				"setStyle",
				"setStyleSheet	(function)"
			],
			[
				"addL",
				"addLine"
			],
			[
				"ca",
				"cancleOperation	(function)"
			],
			[
				"cl",
				"close	(function)"
			],
			[
				"p",
				"p1y	(statement)"
			],
			[
				"va",
				"checkValueValid"
			],
			[
				"te",
				"textChanged	(class)"
			],
			[
				"po",
				"point2	(statement)"
			],
			[
				"che",
				"checkValueValid	(function)"
			],
			[
				"ali",
				"AlignCenter	(class)"
			],
			[
				"Qline",
				"QLineEdit	(class)"
			],
			[
				"seup",
				"setUpApplyUI	(function)"
			],
			[
				"vbox",
				"vbox1	(statement)"
			],
			[
				"chec",
				"checkBoxList	(statement)"
			],
			[
				"rad",
				"radio4	(statement)"
			],
			[
				"gr",
				"groupBox	(statement)"
			],
			[
				"Dsn",
				"Dense1Pattern	(class)"
			],
			[
				"get",
				"get_values	(function)"
			],
			[
				"pad",
				"pandas	(module)"
			],
			[
				"daa",
				"Data	(function)"
			],
			[
				"viewb",
				"viewBoxIDCounter	(statement)"
			],
			[
				"linec",
				"line_color"
			],
			[
				"li",
				"lineWidth	(statement)"
			],
			[
				"plotI",
				"plotIDDict"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/rawr/Downloads/CPP/pp.cpp",
			"settings":
			{
				"buffer_size": 1188,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/bokehp.py",
			"settings":
			{
				"buffer_size": 5096,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/rawr/Downloads/CPP/grade.h",
			"settings":
			{
				"buffer_size": 1495,
				"line_ending": "Unix"
			}
		},
		{
			"file": "plotSubWin.py",
			"settings":
			{
				"buffer_size": 17633,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import sys\nimport pickle\nimport numpy as np\n\nfrom PySide.QtGui    import *\nfrom PySide.QtCore   import *\nfrom PySide.QtWebKit import *\n\nfrom bokeh.resources import CDN\nfrom bokeh.embed     import file_html\nfrom bokeh.models    import ColumnDataSource, Grid, GridPlot, LinearAxis, Plot, Range1d\nfrom bokeh.plotting  import figure, show, output_file,  vplot\n\n\nclass PlotWindowWidget(QMainWindow):\n	def __init__(self, parent = None):\n		super(PlotWindowWidget, self).__init__(parent)\n		self.Web = QWebView()\n		self.Web.setContextMenuPolicy(Qt.CustomContextMenu)\n		data = self.loadCrew()\n	\n		self.div= self.plot(0, data)\n		\n		html = file_html(self.div, CDN, \"my plot\")\n		self.Web.setHtml(html)\n		self.setCentralWidget(self.Web)\n		self.initToolBar()\n\n	def initToolBar(self):\n		self.toolbar = QToolBar()\n		self.addToolBar( Qt.TopToolBarArea , self.toolbar)\n		resetAction = QAction('reset', self)\n		self.toolbar.addAction(resetAction)\n		resetAction.triggered.connect(self.resetGraph)\n\n\n	def plot(self, stack, dataSet):\n		plotPack = []\n		if not stack:\n			for i, data in enumerate(dataSet):\n				plot, rng = self.addPlotArea(data)\n				print rng\n				plotPack.append(plot)\n			html = self.insertPlot(plotPack)\n		return html\n\n\n	def addPlotArea(self, data):\n		x     = np.array(data[0])\n		y     = np.array(data[1])\n\n		radii = 0.008\n		\n		colors       = [\"#%02x%02x%02x\" % (200,200,200) for i in range(len(x))]\n		spamX, spamY = [float(max(x)-min(x))*0.05, float(max(y)-min(y))*0.05]\n\n		p1 = figure(title='Pan and Zoom Here', x_range=(min(x)-spamX, max(x)+spamX), y_range=(min(y)-spamY, max(y)+spamY),\n		            tools='box_zoom,box_select,crosshair, save, reset', plot_width=800, plot_height=300,\n		            background_fill=\"#001133\", border_fill=\"#001133\")\n\n		p1.title_text_color      = \"#C8C8C8\"\n		p1.title_text_font_style = \"bold\"\n		p1.title_text_font_size  = \"10pt\"\n\n		p1.add_layout(LinearAxis(axis_line_color=\"#C8C8C8\" ), 'right')\n		p1.add_layout(LinearAxis(axis_line_color=\"#C8C8C8\" ), 'above')\n\n		p1.xaxis.axis_line_color        = \"#C8C8C8\"\n		p1.xaxis.major_label_text_color = \"#C8C8C8\"\n		p1.xaxis.major_tick_line_color  = \"#C8C8C8\"\n		p1.xaxis.major_tick_line_width  = 1\n		p1.xaxis.minor_tick_line_color  = \"#C8C8C8\"\n		p1.xaxis.minor_tick_line_width  = 1\n\n		p1.yaxis.axis_line_color        = \"#C8C8C8\"\n		p1.yaxis.major_label_text_color = \"#C8C8C8\"\n		p1.yaxis.major_tick_line_color  = \"#C8C8C8\"\n		p1.yaxis.major_tick_line_width  = 1\n		p1.yaxis.minor_tick_line_color  = \"#C8C8C8\"\n		p1.yaxis.minor_tick_line_width  = 1\n\n		p1.xaxis.major_tick_in  =  5 \n		p1.xaxis.major_tick_out =  0\n		p1.xaxis.minor_tick_in  =  3\n		p1.xaxis.minor_tick_out =  0\n\n		p1.yaxis.major_tick_in  =  5 \n		p1.yaxis.major_tick_out =  0\n		p1.yaxis.minor_tick_in  =  3\n		p1.yaxis.minor_tick_out =  0\n\n\n		p1.xgrid.grid_line_color = \"#C8C8C8\"\n		p1.xgrid.grid_line_alpha =  0.5\n		p1.xgrid.grid_line_dash  = [3,3]\n		p1.ygrid.grid_line_color = \"#C8C8C8\"\n		p1.ygrid.grid_line_alpha =  0.5\n		p1.ygrid.grid_line_dash  = [3,3]\n\n		legendText = 'plot'\n		p1.line(x, y, legend=legendText, line_color=colors)\n		p1.scatter(x, y, radius=radii, radius_dimension='y',  fill_color=colors, fill_alpha=1, line_color=None, legend=legendText)\n\n		p1.legend.orientation           = \"top_left\"\n		p1.legend.background_fill_alpha = 0.5\n		p1.legend.border_line_width     = 1\n		p1.legend.border_line_color     = \"#C8C8C8\"\n		p1.legend.label_standoff        = 5\n		p1.legend.glyph_width           = 20\n		p1.legend.legend_spacing        = 5\n		p1.legend.legend_padding        = 20\n		# output_file(\"les_mis.html\")\n		# show(p1)\n		# p1.toolbar_location = None\n		return p1, [min(x)-spamX, max(x)+spamX, min(y)-spamY, max(y)+spamY]\n\n\n	def insertPlot(self, plotSets):\n		\n		layout = vplot(*plotSets)\n		output_file(\"les_mis.html\")\n		# show(layout)\n		for plot in plotSets:\n			plot.toolbar_location = None\n		return layout\n\n	def resetGraph(self):\n		self.div.x_range = Range1d(start=self.rng[0], end=self.rng[1])\n		self.div.y_range = Range1d(start=self.rng[2], end=self.rng[3])\n\n		html = file_html(self.div, CDN, \"my plot\")\n		\n		self.Web.setHtml(html)\n		print 'a'\n\n	def loadCrew(self):\n		fileName = './savedData.pkl'\n		package  = open( fileName, 'rb' )\n		data = pickle.load( package )\n\n		package.close()\n		return data\n\n\nif __name__ == '__main__':\n	app = QApplication(sys.argv)\n	window =  PlotWindowWidget()\n	window.show()\n	app.exec_()",
			"settings":
			{
				"buffer_size": 4349,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/Cpp-11.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++11/C++11.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Cpp-11.sublime-build",
					""
				],
				[
					"Packages/User/Cpp-11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/Cpp-11.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 368.0,
		"last_filter": "pci",
		"selected_items":
		[
			[
				"pci",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: r",
				"Package Control: Remove Package"
			],
			[
				"Package Control:r",
				"Package Control: Remove Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 344.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/rawr/Desktop/perspective.py",
		"/home/rawr/github/Sloth/NightlyBuild.py",
		"/home/rawr/github/Sloth/wbSubWin.py",
		"/home/rawr/Desktop/untitled.py",
		"/home/rawr/Desktop/crop.py",
		"/home/rawr/Desktop/a.py",
		"/home/rawr/Desktop/comp.py",
		"/home/rawr/Desktop/Contours.py",
		"/home/rawr/github/AutoSchedule/AutoSchedule.py",
		"/home/rawr/Downloads/CPP/CV.cpp",
		"/home/rawr/Downloads/opencv-3.0.0/modules/highgui/src/window_QT.h",
		"/home/rawr/Desktop/SubWinList.py",
		"/home/rawr/Desktop/abc.py",
		"/home/rawr/github/Sloth/plotSubWin.py",
		"/home/rawr/github/Sloth/graphSelectorListEditor.py",
		"/home/rawr/github/Sloth/GraphEditor/EditorWindow.py",
		"/home/rawr/github/Sloth/expTableWidget.py",
		"/home/rawr/github/Sloth/graphSelectorWindow.py",
		"/home/rawr/github/NodeGUI/HoverScene.py",
		"/home/rawr/github/NodeGUI/JNode.py",
		"/home/rawr/github/NodeGUI/JackNode.py",
		"/home/rawr/github/Sloth/GraphEditor/MaterialDesignList/MLineListWidget.py",
		"/home/rawr/github/Sloth/GraphEditor/MaterialDesignList/MViewBoxListWidget.py",
		"/home/rawr/github/Sloth/GraphEditor/MaterialDesignList/viewBoxListWidget.py",
		"/home/rawr/github/NodeGUI (copy)/NodeGUI2.py",
		"/home/rawr/github/NodeGUI (copy)/JNode.py",
		"/home/rawr/github/NodeGUI (copy)/HoverScene.py",
		"/home/rawr/github/NodeGUI (copy)/PysideGraph.py",
		"/home/rawr/github/NodeGUI (copy)/ErrorClass.py",
		"/home/rawr/github/NodeGUI (copy)/Untitled Document",
		"/home/rawr/github/Changer/Changer.py",
		"/home/rawr/github/NodeGUI/NodeGUI2.py",
		"/home/rawr/github/Changer/ListEditor.py",
		"/home/rawr/github/AutoSchedule/style.qss",
		"/home/rawr/github/Changer/README.md",
		"/home/rawr/github/AutoSchedule/README.md",
		"/home/rawr/Google Drive/codework/WSpre/wsPRE2.py",
		"/home/rawr/Google Drive/codework/WSpre/t.py",
		"/home/rawr/Google Drive/codework/schedule/wsGUI.py",
		"/home/rawr/Google Drive/codework/schedule_v2/wsGUI.py",
		"/home/rawr/github/revealEditor/README.md",
		"/home/rawr/github/revealEditor/Reveal Editor.py",
		"/home/rawr/github/revealEditor/css/theme/README.md",
		"/home/rawr/github/NodeGUI/README.md",
		"/home/rawr/github/revealEditor/js.py",
		"/home/rawr/github/loginGUI/AutoLoginBot.py",
		"/home/rawr/.config/sublime-text-3/Packages/User/Cpp-11.sublime-build",
		"/home/rawr/Downloads/CPP/grade.cpp",
		"/home/rawr/.config/sublime-text-3/Installed Packages/C++11.sublime-package",
		"/home/rawr/Downloads/CPP/GradeBook.h",
		"/home/rawr/Downloads/CPP/GradeBook.cpp",
		"/home/rawr/Downloads/CPP/MObject.cpp",
		"/home/rawr/Downloads/CPP/MObject.h",
		"/home/rawr/Downloads/CPP/Object.h",
		"/home/rawr/Downloads/CPP/Object.cpp",
		"/home/rawr/Downloads/pp.cpp",
		"/home/rawr/Downloads/CPP/pp",
		"/home/rawr/Desktop/Untitled Document",
		"/home/rawr/Desktop/zz.py",
		"/home/rawr/.config/sublime-text-3/Packages/C++11/C++11.sublime-settings",
		"/home/rawr/.config/sublime-text-3/Packages/User/C++11.sublime-build",
		"/home/rawr/.config/sublime-text-3/Packages/C++11/messages/install.txt",
		"/home/rawr/.config/sublime-text-3/Packages/User/CTags.sublime-settings",
		"/home/rawr/Downloads/Untitled Document",
		"/home/rawr/github/Sloth/bokehPlotter/bokehp.py",
		"/home/rawr/github/revealEditor/index (copy).html",
		"/home/rawr/.config/sublime-text-3/Packages/CTags/CTags.sublime-settings",
		"/home/rawr/Desktop/jsplot.txt",
		"/home/rawr/Desktop/bokehp.py",
		"/home/rawr/Downloads/bokeh-master/examples/interactions/us_marriages_divorces/us_marriages_divorces_interactive.py",
		"/home/rawr/Downloads/bokeh-master/examples/embed/widget.py",
		"/home/rawr/Downloads/bokeh-master/examples/embed/slideshow/app_reveal.py",
		"/home/rawr/Downloads/bokeh-master/examples/embed/simple/simple.py",
		"/home/rawr/Downloads/bokeh-master/examples/embed/embed_multiple.py",
		"/home/rawr/Downloads/bokeh-master/examples/embed/animated.py",
		"/home/rawr/Desktop/DrawSVG-master/SDFSDF.PY",
		"/home/rawr/Desktop/DrawSVG-master/examples.py",
		"/home/rawr/Desktop/DrawSVG-master/exampleGraphs.py",
		"/home/rawr/Desktop/DrawSVG-master/drawSVGGraph.py",
		"/home/rawr/Desktop/SDFSDF.PY",
		"/home/rawr/Desktop/123.SVG",
		"/home/rawr/Desktop/abc.svg",
		"/home/rawr/ProgramFiles/android-pyside-build-scripts/env.sh",
		"/home/rawr/Downloads/bokeh-master/examples/charts/file/hover_span.py",
		"/home/rawr/Downloads/bokeh-master/examples/plotting/file/logplot.py",
		"/home/rawr/Desktop/MColorPicker.py",
		"/home/rawr/Downloads/bokeh-master/examples/glyphs/airports_map.py",
		"/home/rawr/Downloads/bokeh-master/examples/glyphs/trail.py",
		"/home/rawr/Downloads/bokeh-master/examples/embed/spectrogram/spectrogram.py",
		"/home/rawr/Downloads/bokeh-master/examples/embed/embed_multiple_responsive.py",
		"/home/rawr/Downloads/bokeh-master/examples/embed/publishing.py",
		"/home/rawr/Desktop/zxc.html",
		"/home/rawr/Downloads/bokeh-master/examples/charts/file/area.py",
		"/home/rawr/Downloads/bokeh-master/examples/plotting/file/grid.py",
		"/home/rawr/Desktop/asc.py",
		"/home/rawr/Desktop/js.py",
		"/home/rawr/github/Sloth/GraphEditor/MaterialDesignList/MColorPicker.py",
		"/home/rawr/Desktop/zxczxc",
		"/home/rawr/Downloads/reveal.js-3.1.0/index (copy).html",
		"/home/rawr/Desktop/ascasc.py",
		"/home/rawr/Downloads/reveal.js-3.1.0/js/jquery/jquery-ui.js",
		"/home/rawr/Downloads/reveal.js-3.1.0/index.html",
		"/home/rawr/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/usr/share/alsa/alsa.conf",
		"/home/rawr/github/Sloth/GraphEditor/MaterialDesignList/QLineNumber255.py",
		"/home/rawr/github/Sloth/GraphEditor/MaterialDesignList/QLineNumber.py",
		"/home/rawr/github/Sloth/graphOptions.py",
		"/home/rawr/github/Sloth/GraphEditor/viewBoxList.py",
		"/home/rawr/github/Sloth/GraphEditor/viewLineList.py",
		"/home/rawr/github/Sloth/GraphEditor/QStyleComboBox.py",
		"/home/rawr/github/Sloth/GraphEditor/lineControlWidget.py",
		"/home/rawr/github/Sloth/GraphEditor/QLineNumber.py",
		"/home/rawr/github/Sloth/GraphEditor/MaterialDesignList/__init__.py",
		"/home/rawr/Desktop/aa.py",
		"/home/rawr/github/Sloth/GraphEditor/viewBoxControlWidget.py",
		"/home/rawr/github/Sloth/SubWinList.py",
		"/home/rawr/github/NodeGUI/PlugNode.py",
		"/home/rawr/github/NodeGUI/ImageNode.py",
		"/home/rawr/github/Sloth/GraphEditor/untitled.py",
		"/home/rawr/github/Sloth/GraphEditor/ MaterialDesignList.py",
		"/home/rawr/github/Sloth/GraphEditor/SubWinList.py",
		"/home/rawr/github/Sloth/GraphEditor/QSpacer.py",
		"/home/rawr/github/Sloth/GraphEditor/QHeader.py",
		"/home/rawr/github/Sloth/GraphEditor/QLefter.py",
		"/home/rawr/github/Sloth/GraphEditor/QRighter.py",
		"/home/rawr/github/Sloth/GraphEditor/QHeader/QHeader.py",
		"/home/rawr/github/NodeGUI/NodeGUI.py",
		"/home/rawr/Downloads/untitled.py"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"plotIDCounter",
			"lineIDCounter",
			"p1.",
			"rng",
			"matchesMask",
			"img3",
			"img2",
			"img1",
			"5",
			"./free-random-object-vectors-43244",
			"free-random-object-vectors-43244.jpg",
			"sys.argv",
			"OpenNewWorkBook",
			"newwb",
			"SubWinList",
			"CreateTableSub",
			"title",
			"', '",
			"np",
			"plotData",
			"loadCrew",
			"aveData",
			"', '",
			"height",
			"hei",
			"', '",
			"tick",
			"', '",
			"self.plot.plotIDDict",
			"THE HTML PRESENTATION FRAMEWORK",
			"font",
			"setPanelVal",
			"print",
			"addLine",
			"addPlotArea",
			"insertPlot",
			"addPlotHolder",
			"connect",
			"print ",
			"dic",
			"dict",
			"self.option",
			"goption",
			"show",
			"61",
			"setFixed",
			"Fix",
			"sizeHint",
			"addLine",
			"plotIDDict",
			"connect",
			"itemDcFocused",
			"spreadWay",
			"boxLay",
			"print",
			"preview",
			"graphSelector",
			"addLine",
			" addLine",
			"width",
			"bord",
			"AxisItem",
			"utoRange",
			"AutoRange",
			"Range",
			"XRange",
			"Scale",
			"axis",
			"Range",
			"center",
			"xRange",
			"setXRange",
			"x",
			"Range",
			"XRange",
			"key",
			"Background",
			"Enable",
			"Disa",
			"get",
			"Auto",
			"self.plotIDCounter",
			"addPlotHolder",
			"plotIDDict",
			"viewBox",
			"viewBoxIDCounter",
			"viewBox",
			"addPlotArea",
			"', '",
			"set",
			"Config",
			"setConfigOption",
			"backg",
			"style",
			"stle",
			"col",
			"set",
			"', '",
			"set",
			"color",
			"vis",
			"alph",
			"set",
			"enable",
			"', '",
			"fini",
			"200, 200, 200, 255",
			"(200, 200, 200, 255)",
			"'a",
			"ine_val",
			"print ",
			"addItem",
			"insertPlot",
			"addPlotHolder",
			"self.vb",
			"addPlotArea",
			"self.w",
			"plotLineHolder",
			"self.plotIDCounter",
			"plotCounter",
			"addLineHolder",
			"sym",
			"set",
			"alpha",
			"Alpha",
			"', '",
			"255",
			"parent."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"plotArea.",
			"cropImg",
			"trainImg",
			"targetImg",
			"./a\n",
			"a.jpg\n",
			"imageSample\n",
			"\n",
			"width",
			"\n",
			"plotArea",
			"', '\n",
			"self.",
			"\n",
			"', \n",
			"plotListItem",
			"",
			"self.subWinDict",
			"AddWinListItem",
			"subWinList",
			"killConnect",
			"plug",
			"275",
			"121212",
			"090909",
			"222222",
			"888888",
			"	",
			"self.listWidget",
			"1F7514",
			"#1F450C",
			"#53A83E",
			"#8DFF70",
			"#33FF00",
			"	",
			"self.typeThread",
			"self.hbox1",
			"self.hbox1\n",
			"showError",
			"self.showErr",
			"self.ashowErr",
			"aself.showErr",
			"self.showErr",
			"showMSG",
			"showgg",
			"QLabel",
			"QLable",
			"#Autosuspend for",
			"#Runtime PM",
			"#Enable",
			"	\necho",
			"	\n",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/rawr/Downloads/CPP/pp.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1188,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "bokehPlotter/bokehp.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5096,
						"regions":
						{
						},
						"selection":
						[
							[
								1249,
								1249
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1428.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "/home/rawr/Downloads/CPP/grade.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1495,
						"regions":
						{
						},
						"selection":
						[
							[
								306,
								306
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "plotSubWin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17633,
						"regions":
						{
						},
						"selection":
						[
							[
								2597,
								2412
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2009.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4349,
						"regions":
						{
						},
						"selection":
						[
							[
								4349,
								4349
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 31.0,
						"translation.y": 2755.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.707174231333,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 250.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "untitled.sublime-project",
	"replace":
	{
		"height": 82.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
