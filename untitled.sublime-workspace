{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"setC",
				"setColor"
			],
			[
				"bg",
				"bgColorLine"
			],
			[
				"view",
				"viewBox	(statement)"
			],
			[
				"setc",
				"setContentsMargins"
			],
			[
				"edit",
				"titleEdit"
			],
			[
				"__",
				"__name__"
			],
			[
				"MV",
				"MVBoxLayout	(class)"
			],
			[
				"texr",
				"textGroupBox	(statement)"
			],
			[
				"te",
				"textGroupBox"
			],
			[
				"tex",
				"textSize"
			],
			[
				"Axis",
				"axisTitle"
			],
			[
				"Qche",
				"QCheckBox	(class)"
			],
			[
				"MH",
				"MHBoxLayout	(class)"
			],
			[
				"Qbutt",
				"QPushButton	(class)"
			],
			[
				"w",
				"widget	(forstmt)"
			],
			[
				"wid",
				"widget"
			],
			[
				"setF",
				"setFixedWidth"
			],
			[
				"C",
				"ColorLine"
			],
			[
				"f",
				"Fixed	(instance)"
			],
			[
				"set",
				"setHeightForWidth	(function)"
			],
			[
				"exp",
				"Expanding	(instance)"
			],
			[
				"siz",
				"setSizePolicy"
			],
			[
				"ex",
				"Expanding	(instance)"
			],
			[
				"m",
				"Minimum	(instance)"
			],
			[
				"h",
				"height"
			],
			[
				"va",
				"valueChanged"
			],
			[
				"Multi",
				"MultiVBoxLayout	(class)"
			],
			[
				"MA",
				"MAxisTabWidget	(class)"
			],
			[
				"add",
				"addSpacing"
			],
			[
				"setFix",
				"setFixedHeight"
			],
			[
				"stat",
				"statChanged"
			],
			[
				"ad",
				"addWidget"
			],
			[
				"addS",
				"addStretch"
			],
			[
				"addW",
				"addWidget"
			],
			[
				"MGr",
				"MGroupExpand	(class)"
			],
			[
				"Al",
				"AlignCenter	(instance)"
			],
			[
				"poin",
				"pointsClose	(statement)"
			],
			[
				"Alig",
				"AlignLeft	(class)"
			],
			[
				"ins",
				"insertStretch	(function)"
			],
			[
				"la",
				"layout	(forflow)"
			],
			[
				"QH",
				"QHBoxLayout	(class)"
			],
			[
				"QLine",
				"QLineEdit	(class)"
			],
			[
				"hbo",
				"hbox1	(statement)"
			],
			[
				"QTab",
				"QTabWidget	(class)"
			],
			[
				"hbox",
				"hbox2	(statement)"
			],
			[
				"addB",
				"addButton	(function)"
			],
			[
				"setMi",
				"setMinimumWidth	(function)"
			],
			[
				"setfo",
				"setFont	(function)"
			],
			[
				"T",
				"True	(keyword)"
			],
			[
				"pattern",
				"Dense5Pattern"
			],
			[
				"dens",
				"Dense3Pattern	(class)"
			],
			[
				"al",
				"AlignRight	(class)"
			],
			[
				"A",
				"AlignHCenter	(class)"
			],
			[
				"Soi",
				"SolidPattern	(class)"
			],
			[
				"base",
				"baseWidget	(class)"
			],
			[
				"ma",
				"mainH	(statement)"
			],
			[
				"head",
				"headWidget	(class)"
			],
			[
				"sep",
				"sepWidget	(class)"
			],
			[
				"spe",
				"sepWidget"
			],
			[
				"low",
				"lowerPoints	(statement)"
			],
			[
				"drawPo",
				"drawPolygon	(function)"
			],
			[
				"QPo",
				"QPolygon	(class)"
			],
			[
				"sp",
				"setSpacing	(function)"
			],
			[
				"setS",
				"setStyle	(function)"
			],
			[
				"wri",
				"wirteH	(param)"
			],
			[
				"setFo",
				"setFont	(function)"
			],
			[
				"MM",
				"MMutiWidget	(module)"
			],
			[
				"wr",
				"writetxt	(statement)"
			],
			[
				"lab",
				"labeltext	(statement)"
			],
			[
				"wirte",
				"wirteW	(statement)"
			],
			[
				"label",
				"labelW	(statement)"
			],
			[
				"c",
				"contains	(function)"
			],
			[
				"QR",
				"QRect	(class)"
			],
			[
				"setWidt",
				"setFixedWidth	(function)"
			],
			[
				"QW",
				"QWidget	(class)"
			],
			[
				"che",
				"checkEnabled	(statement)"
			],
			[
				"Pen",
				"pen	(statement)"
			],
			[
				"ch",
				"checkStat	(statement)"
			],
			[
				"draw",
				"drawPolygon"
			],
			[
				"Le",
				"LeftButton	(class)"
			],
			[
				"axistitle",
				"axisTitleLable	(statement)"
			],
			[
				"My",
				"MyWidget	(class)"
			],
			[
				"si",
				"size	(statement)"
			],
			[
				"ga",
				"graphics	(module)"
			],
			[
				"tr",
				"trigger_action	(function)"
			],
			[
				"bo",
				"BoxLayout	(class)"
			],
			[
				"b",
				"button	(module)"
			],
			[
				"ac",
				"AccordionApp	(class)"
			],
			[
				"s",
				"size	(statement)"
			],
			[
				"QCom",
				"QComboBox	(class)"
			],
			[
				"Si",
				"SIZE"
			],
			[
				"Qdou",
				"QDoubleSpinBox	(class)"
			],
			[
				"adds",
				"addSpacing	(function)"
			],
			[
				"axistit",
				"axisTitleFont	(statement)"
			],
			[
				"setf",
				"setFixedHeight	(function)"
			],
			[
				"QCh",
				"QCheckBox	(class)"
			],
			[
				"ev",
				"event	(param)"
			],
			[
				"QDou",
				"QDoubleSpinBox	(class)"
			],
			[
				"Qline",
				"QLineEdit	(class)"
			],
			[
				"QV",
				"QVBoxLayout	(class)"
			],
			[
				"min",
				"minorTKPoints	(function)"
			],
			[
				"Qgra",
				"QGraphicsObject	(class)"
			],
			[
				"O",
				"object	(class)"
			],
			[
				"QREc",
				"QRectF	(class)"
			],
			[
				"setB",
				"setBrush	(function)"
			],
			[
				"Qpoint",
				"QPointF	(class)"
			],
			[
				"drawR",
				"drawRect	(function)"
			],
			[
				"drawP",
				"drawPixmap	(function)"
			],
			[
				"F",
				"Format_ARGB32	(class)"
			],
			[
				"QRect",
				"QRectF	(class)"
			],
			[
				"sets",
				"setStyleSheet	(function)"
			],
			[
				"QSp",
				"QSpinBox	(class)"
			],
			[
				"style",
				"styleView	(statement)"
			],
			[
				"cha",
				"changeSymbol	(function)"
			],
			[
				"x",
				"x_range	(statement)"
			],
			[
				"sty",
				"styleCombo	(statement)"
			],
			[
				"QCOm",
				"QComboBox	(class)"
			],
			[
				"a",
				"addWidget	(function)"
			],
			[
				"Circle",
				"circle"
			],
			[
				"MS",
				"MSymbolStyleView	(class)"
			],
			[
				"setP",
				"setPlotAreaVal	(function)"
			],
			[
				"setU",
				"setUpUI	(function)"
			],
			[
				"symbol",
				"symbol_val"
			],
			[
				"line",
				"line_alpha"
			],
			[
				"sy",
				"symbol	(statement)"
			],
			[
				"S",
				"Signal	(class)"
			],
			[
				"o",
				"optionWindow	(statement)"
			],
			[
				"cl",
				"close	(function)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "bokehPlotter/bokehp.py",
			"settings":
			{
				"buffer_size": 9540,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/BokehGraphEditor/EditorWindow.py",
			"settings":
			{
				"buffer_size": 3972,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/dir/axis",
			"settings":
			{
				"buffer_size": 7447,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "label:\n	font size\n	font \n	font style(bold, italic)\n	font color\n\naxis:\n	axis color\n	axis width\n	axis visibility\n	axis start & ends\n	axis format(linear, nl, log10, log2)\n\nmajortick:\n	tick width\n	tick color\n	tick in & out\n	ticks / steps\n	\n	tick font:\n		major_label_orientation (number int and float)\n		standoff\n		align( left, right or center )\n		tick label format( %d, %f, %s)\n		tick font visibility\n		tick font size\n		tick font \n		tick font style(bold, italic)\n		tick font color	\n\nminortick:\n	tick width\n	tick color\n	tick in & out\n	ticks / steps\n\n	tick font:\n		tick font visibility\n		tick font size\n		tick font \n		tick font style(bold, italic)\n		tick font color		",
			"settings":
			{
				"buffer_size": 661,
				"line_ending": "Unix",
				"name": "label:"
			}
		},
		{
			"file": "bokehPlotter/dir/Symbol",
			"settings":
			{
				"buffer_size": 2224,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/bokehPlot.py",
			"settings":
			{
				"buffer_size": 2088,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import sys\nimport types\nfrom   PySide.QtGui       import *\nfrom   PySide.QtCore      import *\nfrom   QLineNumber        import *\nfrom   viewLineList       import *\nfrom   MaterialDesignList.MColorPickerMKII import MColorPicker\nfrom   MaterialDesignList.MUtilities       import *\n\n\n\nclass scroll(QScrollArea):\n	def __init__(self, parent=None):\n		super(scroll, self).__init__(parent)\n		payload = viewBoxControlWidget()\n		self.setFixedWidth(430)\n		self.setContentsMargins(0,0,0,0)\n		self.setWidget(payload)\n\nclass viewBoxControlWidget (QWidget):\n	def __init__(self, parent=None):\n		super(viewBoxControlWidget , self).__init__(parent)\n		self.setContentsMargins(0,0,0,0)\n		box0 = self.setupGraphUI()\n		box1 = self.setupGridUI()\n		box2 = self.setupAxisUI()\n		boxZ = MVBoxLayout()\n		boxZ.addWidgets(box0, MHLine(),  box1, MHLine(), box2, 0)\n		self.setLayout(boxZ)\n		self.activeVlineListWidget = None\n\n\n	def setupGraphUI(self):\n\n		self.titleVisi = QCheckBox('Title Text:')\n		self.titleLine = QLineEdit()\n		self.titleEdit = QPushButton('...')\n\n		self.titleVisi.setFixedWidth(85)\n		self.titleEdit.setFixedWidth(25)\n		hbox0            = MHBoxLayout(self.titleVisi, self.titleLine, self.titleEdit )\n\n		vbox1            = MHBoxLayout()\n		bdcLabel         = QLabel('Border Color')\n		bdmLabel         = QLabel('Border Margins')\n		bgcLabel         = QLabel('Background')\n\n		self.bgColorLine   = MColorPicker()\n		self.bdColorLine   = MColorPicker()\n		self.bdMarginCombo = QComboBox()\n\n		v1 = MVBoxLayout( bdcLabel, bgcLabel, bdmLabel   ).setFixedWidth(120).setAlignment(Qt.AlignHCenter)\n		v2 = MVBoxLayout( self.bdColorLine, self.bgColorLine, self.bdMarginCombo   ).setFixedWidth(120)\n		vbox1.addLayouts(v1, v2)\n\n		hbox2           = MHBoxLayout()\n		resLable        = QLabel('Graph Size( W x H ):')\n		xLable          = QLabel('x')\n\n		self.Gwidth     = QSpinBox()\n		self.GHeight    = QSpinBox()\n		self.Gwidth.setAlignment(Qt.AlignCenter)\n		self.GHeight.setAlignment(Qt.AlignCenter)\n		xLable.setFixedWidth(6)\n		resLable .setFixedWidth(120)\n		hbox2.addWidgets(resLable, self.Gwidth, xLable, self.GHeight)\n\n		vbox = MVBoxLayout(hbox0, MHLine(), vbox1, MHLine(), hbox2, 25 )\n		groupBox = MGroupBox('Graph Options:')\n		groupBox.addLayout(vbox)\n		box = QVBoxLayout()\n		box.addWidget(groupBox)\n		return box\n\n\n	def setupGridUI(self):\n\n		self.showMajorGrid = QCheckBox(\"Show Major Grid\")\n		self.showMinorGrid = QCheckBox(\"Show Minor Grid\")\n		h0 =  MHBoxLayout( 0, self.showMajorGrid, 25, self.showMinorGrid ).setFixedWidth(120)\n\n		\n		GCLabel           = QLabel(\"Grid Color:\")\n		self.majorGCLine  = MColorPicker()\n		self.minorGCLine  = MColorPicker()\n		self.majorGCLine.setFixedWidth(120)\n		self.minorGCLine.setFixedWidth(120)		\n		h1 = MHBoxLayout(  GCLabel, 0, self.majorGCLine, 30, self.minorGCLine)\n\n\n		GWLabel           = QLabel(\"Line Style:\")\n		self.majorGWSpin  = QSpinBox()\n		self.minorGWSpin  = QSpinBox()\n\n		self.majorGSCombo = QComboBox()\n		self.minorGSCombo = QComboBox()	\n\n		self.majorGWSpin.setFixedWidth(40)\n		self.minorGWSpin.setFixedWidth(40)\n\n		self.majorGSCombo.setFixedWidth(80)\n		self.minorGSCombo.setFixedWidth(80)	\n\n		h2 = MHBoxLayout(  GWLabel, 0, self.majorGWSpin, self.majorGSCombo, 35, self.minorGWSpin, self.minorGSCombo)\n\n		h2.setSpacing(0)\n\n\n	\n\n\n		v0   = MVBoxLayout(h0, MHLine(), h1, MHLine(), h2, 25)\n		group = MGroupBox('Grid Options:')\n		group.addLayout(v0)\n		box = QHBoxLayout()\n		box.addWidget(group)\n\n		return box\n\n\n	def setupAxisUI(self):\n		groupBox     = MGroupBox('Axis Options:')\n		self.axisTab = MAxisTabWidget()\n		groupBox.addWidget(self.axisTab)\n		box = MVBoxLayout(groupBox)\n\n		return box\n\n\n\n\n\n	def setPanelVal(self,  width      = None, height     = None, tools   = None, \n						   background = None, borderfill = None, viewNum = None):\n\n		if width is not None:\n			self.plot.plot_width         = width\n		if height is not None:\n			self.plot.plot_height        = height\n		if background:\n			self.plot.background_fill    = background\n		if borderfill:\n			self.plot.border_fill        = borderfill\n		if viewNum is not None:\n			self.viewNum                 = viewNum\n		# return self.getPanelVal()\n\n\n	def getPanelVal(self):\n		self.outLine_val = {'color'   : self.oColorLine.text(),\n							'width'   : float(self.oWidthLine.text()),	\n							'visible' : self.outlineVisi.isChecked()}	\n\n		self.symbol_val  = {'color'   : self.sColorLine.text(),\n							'size'    : float(self.sSizeLine.text()),\n							'outLine' : self.outLine_val,\n							'visible' : self.symbolVisi.isChecked()}						\n		\n		self.symbol.symbol_val(**self.symbol_val)\n		self.val         = {'name'    : self.nameLine.text(),\n							'color'   : self.lColorLine.text(),\n							'width'   : float(self.lWidthLine.text()),\n							'style'   : None,\n							'symbol'  : self.symbol, \n							'visible' : self.lineVisi.isChecked(), \n							'viewNum' : None}\n		return self.val\n\n\n\n\n\nclass MAxisTabWidget(QTabWidget):\n	def __init__(self, parent = None):\n		super(MAxisTabWidget, self).__init__(parent)\n		self.addAxis()\n		self.addAxis()\n		self.addAxis()\n		self.addAxis()\n\n	def addAxis(self):\n		self.addTab(MAxisTab(), 'x axis')\n\nclass MAxisTab(QWidget):\n	def __init__(self, parent = None):\n		super(MAxisTab, self).__init__(parent)	\n		v1 = self.setupAxisTextUI()\n		self.setLayout(v1)\n\n	def setupAxisTextUI(self):\n		self.axisTitleChk  = QCheckBox('Axis Title:')\n		self.axisTitleEdit = QPushButton('...')\n		self.axisTitle     = QLineEdit()\n		self.axisTitleChk.setFixedWidth(85)\n		self.axisTitleEdit.setFixedWidth(25)\n		h0 = MHBoxLayout(self.axisTitleChk, self.axisTitle, self.axisTitleEdit)\n		h0.setSpacing(0)\n		v1 = MVBoxLayout(h0, 0)\n\n		return v1\n		\n\n\n\ndef run():\n	app        = QApplication(sys.argv)\n	MainWindow = viewBoxControlWidget()\n	MainWindow = scroll()\n	MainWindow.show()\n	import os\n	print \"   *-*-*-*-* deBug mode is on *-*-*-*-*\"\n	print \"File Path: \" + os.path.realpath(__file__)\n	app.exec_()\n	\n# run()		",
			"settings":
			{
				"buffer_size": 5865,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/BokehGraphEditor/lineControlWidget.py",
			"settings":
			{
				"buffer_size": 7448,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/BokehGraphEditor/viewBoxControlWidget.py",
			"settings":
			{
				"buffer_size": 6132,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/BokehGraphEditor/viewBoxList.py",
			"settings":
			{
				"buffer_size": 3914,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/BokehGraphEditor/viewLineList.py",
			"settings":
			{
				"buffer_size": 2885,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/BokehGraphEditor/MaterialDesignList/MColorPickerMKII.py",
			"settings":
			{
				"buffer_size": 3614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bokehPlotter/BokehGraphEditor/MaterialDesignList/MUtilities.py",
			"settings":
			{
				"buffer_size": 5516,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/NASM x86 Assembly/NASM.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++11/C++11.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/NASM x86 Assembly/NASM.sublime-build",
					""
				],
				[
					"Packages/NASM x86 Assembly/NASM.sublime-build",
					"Run"
				]
			],
			[
				"Packages/NASM x86 Assembly/NASM.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Cpp-11.sublime-build",
					""
				],
				[
					"Packages/User/Cpp-11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/Cpp-11.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 390.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pci",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: r",
				"Package Control: Remove Package"
			],
			[
				"Package Control:r",
				"Package Control: Remove Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 344.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/rawr/Desktop/test.py",
		"/home/rawr/.config/sublime-text-3/Packages/User/SublimePython.sublime-settings",
		"/home/rawr/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/rawr/github/Sloth/bokehPlotter/bokehLine.py",
		"/home/rawr/github/Sloth/bokehPlotter/bokehPlot.py",
		"/home/rawr/github/Sloth/bokehPlotter/bokehSymbol.py",
		"/home/rawr/github/Sloth/bokehPlotter/BokehGraphEditor/MaterialDesignList/MColorPicker.py",
		"/home/rawr/github/Sloth/bokehPlotter/BokehGraphEditor/MaterialDesignList/MSymbolStylePicker.py",
		"/etc/systemd/logind.conf",
		"/home/rawr/Downloads/Argyll_V1.8.3/Readme.txt",
		"/home/rawr/.config/sublime-text-3/Packages/User/pypy.sublime-build",
		"/home/rawr/Downloads/Dll/import dll.py",
		"/home/rawr/Google Drive/碩士/NEW HALL2.py",
		"/home/rawr/github/Sloth/bokehPlotter/dir/plotArea",
		"/home/rawr/Downloads/ScriptEngine-0.0/scriptengine.py",
		"/home/rawr/Downloads/lolcad-master/lolcad.py",
		"/home/rawr/Downloads/lolcad-master/nurbs.py",
		"/home/rawr/Downloads/lolcad-master/visualizer.py",
		"/home/rawr/Downloads/lolcad-master/tests/data/cone.step",
		"/home/rawr/github/Sloth/bokehPlotter/BokehGraphEditor/MaterialDesignList/MMutiWidgetMKII.py",
		"/home/rawr/github/Changer/Changer.py",
		"/home/rawr/github/revealEditor/index (copy).html",
		"/home/rawr/github/revealEditor/Reveal Editor.py",
		"/home/rawr/github/Sloth/NightlyBuild.py",
		"/home/rawr/github/Sloth/save.html",
		"/home/rawr/github/Sloth/bokehPlotter/bokehAxis.py",
		"/home/rawr/Desktop/test (another copy).py",
		"/home/rawr/github/Sloth/bokehPlotter/BokehGraphEditor/MaterialDesignList/MMutiWidget.py",
		"/home/rawr/github/Sloth/bokehPlotter/BokehGraphEditor/MaterialDesignList/MMuitlSelector.py",
		"/home/rawr/github/Sloth/bokehPlotter/BokehGraphEditor/MaterialDesignList/MTextStyler.py",
		"/home/rawr/github/IPython_Notebook/save.html",
		"/home/rawr/github/revealEditor/Gruntfile.js",
		"/home/rawr/github/revealEditor/js/reveal.js",
		"/home/rawr/github/revealEditor/js.py",
		"/home/rawr/github/Sloth/bokehPlotter/a.html",
		"/home/rawr/Desktop/test (copy).py",
		"/home/rawr/github/NodeGUI/JNode.py",
		"/home/rawr/github/temp_shit/Trapezoid/polyangle.py",
		"/home/rawr/Downloads/m/main.py",
		"/home/rawr/Downloads/Adobe Photoshop CC 2015 (20150529.r.88) (32+64Bit) + Crack/ReadMe.txt",
		"/home/rawr/Downloads/examples/widgets/carousel_buttons.py",
		"/home/rawr/Downloads/m/buildozer.spec",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/accordion_1.py",
		"/home/rawr/github/Sloth/bokehPlotter/BokehGraphEditor/viewLineList.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/fruit_detail_view.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/list_cascade_images.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/colorpicker.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/3Drendering/main.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/keyboard/main.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/list_cascade.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/list_cascade_dict.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/list_ops.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/list_master_detail.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/list_kv.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/list_composite.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/list_simple.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/widgets/lists/fixtures.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/RST_Editor/main.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/tutorials/pong/main.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/demo/camera_puzzle.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/container/main.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/application/app_with_kv_in_template1.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/application/app_suite.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/application/app_with_build.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/application/app_with_kv.py",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/animation/animate.py",
		"/home/rawr/Downloads/m/n/buildozer.spec",
		"/home/rawr/Desktop/Untitled Folder/buildozer.spec",
		"/home/rawr/Desktop/main.py",
		"/home/rawr/Desktop/buildozer.spec",
		"/home/rawr/Downloads/log.text",
		"/usr/local/bin/buildozer",
		"/home/rawr/Desktop/kivys.py",
		"/home/rawr/Android/Sdk/SDK Readme.txt",
		"/home/rawr/Desktop/calc-sum.asm",
		"/home/rawr/Desktop/hello.asm",
		"/home/rawr/Desktop/linux-ex/first.asm",
		"/home/rawr/ProgramFiles/labplot-2.0.1/INSTALL",
		"/home/rawr/Downloads/labplot-kf5-2.1.0/INSTALL",
		"/home/rawr/Downloads/MagicPlotStudent/magicplot.sh",
		"/home/rawr/Desktop/linux-ex/asm_io.inc",
		"/home/rawr/Desktop/first.asm",
		"/home/rawr/Desktop/hello.o",
		"/home/rawr/Downloads/pysam-0.8.4/INSTALL",
		"/home/rawr/github/Sloth/bokehPlotter/dir/axis",
		"/home/rawr/Downloads/moodleReportCrawler.py",
		"/home/rawr/github/Sloth/bokehPlotter/BokehGraphEditor/EditorWindow.py",
		"/home/rawr/Desktop/asd.html",
		"/home/rawr/github/Sloth/bokehPlotter/dir/Symbol",
		"/home/rawr/github/Sloth/bokehPlotter/dir/Line",
		"/home/rawr/github/Sloth/bokehPlotter/__init__.py",
		"/home/rawr/github/Sloth/plotSubWin.py",
		"/home/rawr/ProgramFiles/buildozer/buildozer/ buildozer.spec",
		"/home/rawr/ProgramFiles/Kivy-1.9.0/examples/camera/main.py",
		"/home/rawr/ProgramFiles/buildozer/buildozer/default (copy).spec",
		"/home/rawr/ProgramFiles/buildozer/buildozer/default.spec",
		"/home/rawr/ProgramFiles/android-studio 2/bin/studio.sh",
		"/etc/terminfo/README",
		"/home/rawr/ProgramFiles/processing-3.0.1/processing",
		"/home/rawr/.config/sublime-text-3/Packages/User/Cpp-11.sublime-build",
		"/home/rawr/github/Sloth/GraphEditor/EditorWindow.py",
		"/home/rawr/github/Sloth/m.py",
		"/home/rawr/github/Sloth/GraphEditor/GraphEditor.py",
		"/home/rawr/github/Sloth/GraphEditor/__init__.py",
		"/home/rawr/github/Sloth/GraphEditor/__main__.py",
		"/home/rawr/github/temp_shit/Trapezoid/Trapezoid.py",
		"/home/rawr/github/temp_shit/k.py",
		"/home/rawr/github/temp_shit/findme.py",
		"/home/rawr/github/temp_shit/WorkBookWin.py",
		"/home/rawr/github/temp_shit/damndict.py",
		"/home/rawr/github/temp_shit/del.py",
		"/home/rawr/github/temp_shit/pickle_loader.py",
		"/home/rawr/github/NodeGUI/NodeGUI2.py",
		"/home/rawr/github/loginGUI/AutoLoginBot.py",
		"/home/rawr/github/temp_shit/comparer.py",
		"/home/rawr/github/temp_shit/untitled.py",
		"/home/rawr/github/temp_shit/ListEditor.py",
		"/home/rawr/Desktop/temp test.py",
		"/home/rawr/Desktop/Trapezoid.py",
		"/home/rawr/github/NodeGUI/NodeGUI.py",
		"/home/rawr/github/NodeGUI/Node.py",
		"/home/rawr/github/NodeGUI/TextNode.py",
		"/home/rawr/github/NodeGUI/TNode.py",
		"/home/rawr/Desktop/m.py",
		"/home/rawr/github/NodeGUI/JackNode.py",
		"/home/rawr/github/NodeGUI/HoverScene.py",
		"/home/rawr/Downloads/untitled.py",
		"/home/rawr/Downloads/strd_nist_fit.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"activeVlineListWidget",
			"setLineVal",
			"self.lineIDDict",
			"editor",
			"getLine",
			"viewBox",
			"setPanelVal",
			"vlinelistW",
			"self.lcontrol",
			"linecon",
			"Multi",
			"Hl",
			"Float",
			"numpy.Float",
			"Numeric",
			"fill",
			"self.vco",
			"some",
			"Div",
			"styleSh",
			"type",
			"wWWidget",
			"setFont",
			"checkwidget",
			"print",
			"self.textRect",
			"self.drawRect",
			"color",
			"self.text",
			"text",
			"> ",
			"...",
			"self.rect",
			"enableCheck",
			"layo",
			"s",
			"previewRect",
			"range",
			"size",
			"ty",
			"mar",
			"mark",
			"marker",
			"cir",
			"figu",
			"fig",
			"leg",
			"legend",
			"name",
			"getPanelVa",
			"alp",
			"visi",
			"dou",
			"getLineValues",
			"setvlineListWidgetVal",
			"plotIDDict",
			"visibe",
			"print",
			"plotID",
			"print",
			"insert",
			"style",
			"zsh",
			"term",
			"TERM",
			"xaxis",
			"major",
			"initPlotArea",
			"leg",
			"ra",
			"fill",
			"uni",
			"line_",
			"size",
			"rad",
			"glyph",
			"color",
			"', '",
			"color",
			"', '",
			"data",
			"symbol",
			"mai",
			"may",
			"_line_",
			"addLineHolder",
			"lineIDDict",
			"addPlotHolder",
			" addPlotHolder",
			"plotIDDict",
			"EditorWindow",
			"self.option",
			"goption",
			"...     ",
			"pre",
			"geo",
			"change",
			"prepareGeometryChange()",
			"poli",
			"contentSceneRectF",
			"contentRect",
			"scene",
			"elf.scene",
			"QPaint",
			"Qpainter",
			"drawRect",
			"painter",
			"paint",
			"print",
			"div",
			"saveData",
			"saveCrew",
			"save",
			"self.mainWindow",
			"self.plot(",
			"editor",
			"tick",
			"color",
			"major",
			"axis",
			"', '",
			"axis",
			"lab",
			"', '",
			"xaxis",
			"label",
			"xaxis",
			"self"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"float",
			"Float",
			"numpy",
			"baseWidget",
			"",
			"w",
			"yaxis",
			"minor",
			"minor\n",
			"\n",
			"line",
			"   ",
			"minor",
			"\n",
			"plot",
			"self",
			"target",
			"yaxis",
			"minor",
			"self",
			"yaxis",
			"target",
			"target,",
			"target.",
			"minor",
			"hight",
			"yaxis",
			"minor",
			"yaxis",
			"self._plot_",
			"\n",
			"self,",
			"self.",
			"plotArea.",
			"cropImg",
			"trainImg",
			"targetImg",
			"./a\n",
			"a.jpg\n",
			"imageSample\n",
			"\n",
			"width",
			"\n",
			"plotArea",
			"', '\n",
			"self.",
			"\n",
			"', \n",
			"plotListItem",
			"",
			"self.subWinDict",
			"AddWinListItem",
			"subWinList",
			"killConnect",
			"plug",
			"275",
			"121212",
			"090909",
			"222222",
			"888888",
			"	",
			"self.listWidget",
			"1F7514",
			"#1F450C",
			"#53A83E",
			"#8DFF70",
			"#33FF00",
			"	",
			"self.typeThread",
			"self.hbox1",
			"self.hbox1\n",
			"showError",
			"self.showErr",
			"self.ashowErr",
			"aself.showErr",
			"self.showErr",
			"showMSG",
			"showgg",
			"QLabel",
			"QLable",
			"#Autosuspend for",
			"#Runtime PM",
			"#Enable",
			"	\necho",
			"	\n",
			""
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "bokehPlotter/bokehp.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9540,
						"regions":
						{
						},
						"selection":
						[
							[
								2720,
								2720
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1478.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "bokehPlotter/BokehGraphEditor/EditorWindow.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3972,
						"regions":
						{
						},
						"selection":
						[
							[
								2745,
								2745
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2565.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "bokehPlotter/dir/axis",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7447,
						"regions":
						{
						},
						"selection":
						[
							[
								1000,
								1000
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 95.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 661,
						"regions":
						{
						},
						"selection":
						[
							[
								489,
								489
							]
						],
						"settings":
						{
							"auto_name": "label:",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "bokehPlotter/dir/Symbol",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2224,
						"regions":
						{
						},
						"selection":
						[
							[
								289,
								289
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 37.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "bokehPlotter/bokehPlot.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2088,
						"regions":
						{
						},
						"selection":
						[
							[
								1546,
								1546
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 594.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5865,
						"regions":
						{
						},
						"selection":
						[
							[
								981,
								981
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 535.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "bokehPlotter/BokehGraphEditor/lineControlWidget.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7448,
						"regions":
						{
						},
						"selection":
						[
							[
								5107,
								5107
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 43.0,
						"translation.y": 4055.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "bokehPlotter/BokehGraphEditor/viewBoxControlWidget.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6132,
						"regions":
						{
						},
						"selection":
						[
							[
								3846,
								3846
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2860.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "bokehPlotter/BokehGraphEditor/viewBoxList.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3914,
						"regions":
						{
						},
						"selection":
						[
							[
								3725,
								3725
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2112.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "bokehPlotter/BokehGraphEditor/viewLineList.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2885,
						"regions":
						{
						},
						"selection":
						[
							[
								2330,
								2330
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1422.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "bokehPlotter/BokehGraphEditor/MaterialDesignList/MColorPickerMKII.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3614,
						"regions":
						{
						},
						"selection":
						[
							[
								101,
								101
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 66.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "bokehPlotter/BokehGraphEditor/MaterialDesignList/MUtilities.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5516,
						"regions":
						{
						},
						"selection":
						[
							[
								3299,
								3299
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2707.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.470409346022,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 212.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "untitled.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
